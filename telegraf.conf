[global_tags]

[agent]
  interval = "10s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = ""
  hostname = ""
  omit_hostname = false

  debug = false
  quiet = false
  logfile = ""

# Input plugins ============================================================

[[inputs.cpu]]
  percpu = true
  totalcpu = true
  collect_cpu_time = false
  report_active = false

[[inputs.disk]]
  ignore_fs = ["tempfs", "devtmpfs"]

#[[inputs.diskio]]

#[[inputs.kernel]]

#[[inputs.mem]]

#[[inputs.processes]]

#[[input.swap]]

#[[inputs.system]]

[[inputs.prometheus]]
  url = ["http://cadvisor:8080/metrics"]

[[inputs.docker]]
  ## Docker Endpoint
  ##   To use TCP, set endpoint = "tcp://[ip]:[port]"
  ##   To use environment variables (ie, docker-machine), set endpoint = "ENV"
  endpoint = "tcp://dockerproxy:2375"

  ## Set to true to collect Swarm metrics(desired_replicas, running_replicas)
  gather_services = false

  ## Only collect metrics for these containers. Values will be appended to
  ## container_name_include.
  ## Deprecated (1.4.0), use container_name_include
  container_names = []

  ## Set the source tag for the metrics to the container ID hostname, eg first 12 chars
  source_tag = false

  ## Containers to include and exclude. Collect all if empty. Globs accepted.
  container_name_include = []
  container_name_exclude = []

  ## Container states to include and exclude. Globs accepted.
  ## When empty only containers in the "running" state will be captured.
  ## example: container_state_include = ["created", "restarting", "running", "removing", "paused", "exited", "dead"]
  ## example: container_state_exclude = ["created", "restarting", "running", "removing", "paused", "exited", "dead"]
  # container_state_include = []
  # container_state_exclude = []

  ## Timeout for docker list, info, and stats commands
  timeout = "5s"

  ## Whether to report for each container per-device blkio (8:0, 8:1...) and
  ## network (eth0, eth1, ...) stats or not
  perdevice = true
  ## Whether to report for each container total blkio and network stats or not
  total = false
  ## Which environment variables should we use as a tag
  ##tag_env = ["JAVA_HOME", "HEAP_SIZE"]
  ## docker labels to include and exclude as tags.  Globs accepted.
  ## Note that an empty array for both will include all labels as tags
  docker_label_include = []
  docker_label_exclude = []

  ## Optional TLS Config
  # tls_ca = "/etc/telegraf/ca.pem"
  # tls_cert = "/etc/telegraf/cert.pem"
  # tls_key = "/etc/telegraf/key.pem"
  ## Use TLS but skip chain & host verification
  # insecure_skip_verify = false

# Output plugins ===========================================================

#[[outputs.influxdb]]
#  urls = ["http://influxdb:8086"] # URL to InfluxDB instance
#  database = "telegraf" # (This is the database that telegraf is pushing to)
#  username = "telegraf" # InfluxDB username
#  password = "telegraf" # InfluxDB password
#
#  retention_policy = ""
#  write_consistency = "any"
#  timeout = "5s"
##  password = "telegraf"

[[outputs.influxdb_v2]]
  urls = ["http://influxdb:8086"]
  token = "sV5izCT3nh2lzdTV7JC4115E9Bqt_q1va6cV-QhWfG7uvSbq3uudMjkKGZuXJYf7XUGU_rPyqpK1jIEN5feJhg=="
  organization = "engineering"
  bucket = "telegraf_db"

[[outputs.health]]

  ## Address and port to listen on.
  service_address = "http://telegraf:8080"

  ## The maximum response time allowed for check subtables.
#  response_timeout = "5s"
